# RUN: xla-translate -hlo-to-mlir-hlo %s | FileCheck %s
hlo_module       {
  name: "main"
  entry_computation_name: "main.3"
  computations {
    name: "main.3"
    instructions {
      name: "Arg_0.1"
      opcode: "parameter"
      shape {
        element_type: S32
        layout {
        }
      }
      metadata {
      }
      id: 1
      frontend_attributes {
      }
    }
    instructions {
      name: "Arg_1.2"
      opcode: "parameter"
      shape {
        element_type: F32
        dimensions: 2
        layout {
          minor_to_major: 0
        }
        is_dynamic_dimension: true
      }
      metadata {
      }
      parameter_number: 1
      id: 2
      frontend_attributes {
      }
    }
    program_shape {
      parameters {
        element_type: S32
        layout {
        }
      }
      parameters {
        element_type: F32
        dimensions: 2
        layout {
          minor_to_major: 0
        }
        is_dynamic_dimension: true
      }
      result {
        element_type: F32
        dimensions: 2
        layout {
          minor_to_major: 0
        }
        is_dynamic_dimension: true
      }
      parameter_names: "Arg_0"
      parameter_names: "Arg_1"
    }
    id: 3
    root_id: 2
  }
  host_program_shape {
    parameters {
      element_type: S32
      layout {
      }
    }
    parameters {
      element_type: F32
      dimensions: 2
      layout {
        minor_to_major: 0
      }
      is_dynamic_dimension: true
    }
    result {
      element_type: F32
      dimensions: 2
      layout {
        minor_to_major: 0
      }
      is_dynamic_dimension: true
    }
    parameter_names: "Arg_0"
    parameter_names: "Arg_1"
  }
  id: 3
  entry_computation_id: 3
  # CHECK: mhlo.dynamic_parameter_bindings = [#mhlo.dynamic_parameter_binding<dynamic_param_num = 0, dynamic_param_indices = [], target = kOutput, target_num = 0, target_indices = [], target_dim_num = 0>, #mhlo.dynamic_parameter_binding<dynamic_param_num = 0, dynamic_param_indices = [], target = kParam, target_num = 1, target_indices = [], target_dim_num = 0
  dynamic_parameter_binding {
    entries {
      target: KOUTPUT
    }
    entries {
      target_num: 1
      target: KPARAM
    }
  }
  is_dynamic: true
  use_auto_spmd_partitioning: true
}

# CHECK: func.func @main(%arg0: tensor<i32>, %arg1: tensor<?xf32, #mhlo.type_extensions<bounds = [2]>>) -> tensor<?xf32, #mhlo.type_extensions<bounds = [2]>> {
